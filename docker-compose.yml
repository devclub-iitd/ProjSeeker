version: "3.4"
services:
  db:
    image: "${REGISTRY_NAME}postgres:10.1-alpine"
    volumes:
      - projseeker_db:/var/lib/postgresql/data/
    environment:
      - POSTGRES_NAME=${POSTGRES_NAME}
      - POSTGRES_USER=${POSTGRES_USER}
      - POSTGRES_PASSWORD=${POSTGRES_PASSWORD}
      - POSTGRES_DB=${POSTGRES_DB}
    networks:
      - internal
    restart: "always"

  web:
    image: "${REGISTRY_NAME}devclubiitd/projseeker:0.1"
    build: .
    volumes:
      - "uploads:/code/ProjSeeker/uploads"
      - "staticfiles:/code/ProjSeeker/staticfiles"
    restart: "always"
    ports:
      - ${PORT}
    healthcheck:
      test: ["CMD", "curl", "http://localhost:${PORT}"]
      interval: 1m30s
      timeout: 10s
      retries: 3
      start_period: 40s
    networks:
      - internal
    env_file:
      - "./.env"
    depends_on:
      - db
  nginx:
    image: "${REGISTRY_NAME}devclubiitd/nginx:1.21.3-alpine"
    build:
      context: ./nginx/
      args:
        - PORT=${PORT}
    ports:
      - "80"
    restart: "always"
    volumes:
      - "uploads:/code/protected"
      - "staticfiles:/code/staticfiles"
      - "nginx_logs:/var/log/nginx"
    environment:
      - VIRTUAL_HOST=${VIRTUAL_HOST}
      - PORT=${PORT}

    networks:
      - internal
      - reverseproxy
    depends_on:
      - web
volumes:
  projseeker_db:
  uploads:
  staticfiles:
  nginx_logs:

networks:
  reverseproxy:
    external:
      name: "reverseproxy"
  internal:
